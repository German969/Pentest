Directory Traversal
echo file_get_contents('/var/www/sandbox/uploads' . $_GET['file']);
exploit: ../../../../etc/passwords

HTTP multipart uploads have a filename in the header
exploit: ../../../../../var/www/public/definetely_not_malicious.php

MITIGATE
Don't allow path separators
strip instances of ../ or ..\
Don't allow user data to control paths
Generate a filename based on the extension or the md5

Command Injection
echo shell_exec('ping -c 4 ' . $_GET['hostname']);
exploit: google.com;echo test
gives back an empty page (or use &)
backticks (``) for subcommands
ping `echo google.com`

MITIGATION
never embed user data into commands
shell scaping: escapeshellcmd() (PHP)
this scape characters but no spaces so you can add arguments

SQL Inyection
$name = $_GET['name'];
$results = mysql_query("SELECT age, grade, teacher FROM students WHERE (name = '$name')");
exploit: Robert'); DROP TABLE Students;--

MITIGATION
All strings quoted and scaped: mysql_real_escape_string() (PHP)
parameterized queries
use an ORM for data access

DETECTION
' OR 1='1 -- (all rows)
' AND 0='1 -- (no rows)

EXFILTRATION
1' UNION SELECT 1, 2, 3; --'; (You must match num of rows)

Blind SQL Injection
f.e. login pages

Oracles: binary result -> read bit by bit (script)
Truly blind: no difference -> how long takes to execute
on truly blind we can introduce a delay in MSSQL server
10 sec if is a 1 and no delay if is a 0
and it turns into a oracle type just watching the time

Detecting Database
MSSQL -> WAITFOR DELAY
MySQL -> BENCHMARK()

/*! comment */ --
MySQL will include the contents of the comments inline if it has an exclamation point at the beginning

WAITFOR DELAY will work for MSSQL and fail elsewhere

UTL_INADDR.get_host_address('google.com') will do a DNS request on oRACLE


